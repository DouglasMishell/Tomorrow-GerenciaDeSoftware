-------------------------------------------------------Resumo Aula 1----------------------------------------------------------------------
       
    Aula mais direcionada para os conceitos teóricos, aprendemos sobre o que é um software, 
seus artefatos(tudo aquilo que pode ser alterado, atualizado, excluído e registrado),apren-
demos sobre a importância do controle de mudança, e como ele impacta na fluidez e minimiza-
ção de erros, como a supervisão do andamento do projeto influencia para um melhor desenvol-
vimento do mesmo.

1.SCM: É supervisionar as alterações do Projeto
2.Software: é um conjunto de instruções
3.Para quê SCM: Supervisão e controle
4.História: Finalidade militar para minimizar erros
5.Mudança de foco (IEEE, EIA, ISO) para padronização
6.Baseline: versão aprovada do projeto
7.Controle de Mudança: Verifica e define as alterações
8.Issue: Funcionalidades do código
9.Issue Tracking: gerencia as issues
9.Milestone: conjunto de issue associadas por um objetivo
10.Controle de Versão: Registra as etapas do código
11.Git: Ferramenta mais utilizada para o Versionamento
12.GitHub: plataforma utilizada para armazenar o projeto remotamente e fazer registros
13.Repositório Local: armazena na sua máquina
14.

-------------------------------------------------------Resumo Aula 2----------------------------------------------------------------------

    Aula direcionada para o aprendizado dos comandos do git, ou seja, aprendemos a como versio-
nar o nosso projeto e acompanhando seus registros na plataforma github. Os comandos mais impor-
tantes são:

1.git config --global user.name  : registro de quem está modificando o projeto
2.git config --global user.email : registro de quem está modificando o projeto
3.git init: inicia o repositório local
4.git status: verifica o estado atual do código
5.git add: adiciona o arquivo em um pré commit
6.git commit -m: adiciona o arquivo no repositorio
7.git push: atualiza o repositorio remoto
8.git pull: recebe as atualizações do repositorio remoto
9.git reset HEAD~: Desfaz o último commit e retorna às mudanças
10.git branch nome-da-branch: cria uma nova branch
11.git push --set-upstream origin nome-da-branch: envia a branch para o repositorio remoto
12.git rebase <branch>: junta duas branchs
13. git add origin "https": conecta-se com o repositorio remoto